#LyX file created by tex2lyx 2.0.6
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble


\usepackage{times}\bibpunct{(}{)}{;}{a}{}{,}




\usepackage{algpseudocode}\algblock{ParFor}{EndParFor}
\algnewcommand\algorithmicparfor{\textbf{parallel for}}
\algnewcommand\algorithmicpardo{\textbf{do}}
\algnewcommand\algorithmicendparfor{\textbf{end\ parallel for}}
\algrenewtext{ParFor}[1]{\algorithmicparfor\ #1\ \algorithmicpardo}
\algrenewtext{EndParFor}{\algorithmicendparfor}

\usepackage{xcolor}

\newcommand{\matern}{Mat\'{e}rn}
\newcommand{\proglang}[1]{\textbf{\texttt{#1}}}
\newcommand{\pkg}[1]{\textbf{#1}}
\newcommand{\code}[1]{\texttt{#1}}
\newcommand{\bm}[1]{\mbox{\boldmath $#1$}}
\newcommand{\T}{\rule{0pt}{3.5ex}}


\end_preamble
\use_default_options false
\begin_modules
logicalmkup
\end_modules
\language english
\language_package none
\inputencoding auto
\fontencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\paperfontsize 12
\spacing single
\use_hyperref 0
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 0
\use_mathdots 0
\cite_engine natbib_authoryear
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Author

Christopher J. Paciorek, University of California, Berkeley
\begin_inset Newline newline
\end_inset

 Benjamin Lipshitz, University of California, Berkeley
\begin_inset Newline newline
\end_inset

 Wei Zhuo, Georgia Institute of Technology
\begin_inset Newline newline
\end_inset

 Prabhat, Lawrence Berkeley National Laboratory
\begin_inset Newline newline
\end_inset

 Cari G. Kaufman, University of California, Berkeley
\begin_inset Newline newline
\end_inset

 Rollin C. Thomas, Lawrence Berkeley National Laboratory
\end_layout

\begin_layout Title

Parallelizing Gaussian Process Calculations in 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Abstract

We consider parallel computation for Gaussian process calculations to overcome computational and memory constraints on the size of datasets that can be analyzed. Using a hybrid parallelization approach that uses both threading (shared memory) and message-passing (distributed memory), we implement the core linear algebra operations used in spatial statistics and Gaussian process regression in an 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 package called 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

bigGP
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 that relies on 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

C
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 and 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

MPI
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

. The approach divides the covariance matrix into blocks such that the computational load is balanced across processes while communication between processes is limited. The package provides an API enabling 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 programmers to implement Gaussian process-based methods by using the distributed linear algebra operations without any 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

C
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 or 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

MPI
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 coding. We illustrate the approach and software by analyzing an astrophysics dataset with 
\begin_inset Formula $n=67,275$
\end_inset

 observations. 
\end_layout

\begin_layout Section

Introduction
\end_layout

\begin_layout Standard

Gaussian processes are widely used in statistics and machine learning for spatial and spatio-temporal modeling 
\begin_inset CommandInset citation
LatexCommand citep
after ""
before ""
key "Bane:etal:2003"

\end_inset

, design and analysis of computer experiments 
\begin_inset CommandInset citation
LatexCommand citep
after ""
before ""
key "Kenn:OHag:2001"

\end_inset

. 
\begin_inset CommandInset citation
LatexCommand citet
after ""
before ""
key "Rasm:Will:2006"

\end_inset

 illustrate the use of these processes in nonparametric regression. One popular example is the spatial statistics method of kriging, which is equivalent to conditional expectation under a Gaussian process model for the unknown spatial field. However standard implementations of Gaussian process-based methods are computationally intensive because they involve calculations with covariance matrices of size 
\begin_inset Formula $n$
\end_inset

 by 
\begin_inset Formula $n$
\end_inset

 where 
\begin_inset Formula $n$
\end_inset

 is the number of locations with observations. In particular the computational bottleneck is generally the Cholesky decomposition of the covariance matrix, whose computational cost is of order 
\begin_inset Formula $n^3$
\end_inset

.
\end_layout

\begin_layout Standard

For example, a basic spatial statistics model (in particular a geostatistical model) can be specified in a hierarchical fashion as 
\begin_inset Formula \begin{eqnarray}
\bm{Y}|\bm{g},\bm{\theta} & \sim & \mathcal{N}(\bm{g},\bm{C}_y(\bm{\theta})) \nonumber\\
\bm{g}|\bm{\theta} & \sim & \mathcal{N}(\bm{\mu}(\bm{\theta}),\bm{C}_g(\bm{\theta})),\label{eq:main}
\end{eqnarray}
\end_inset

where 
\begin_inset Formula $\bm{g}$
\end_inset

 is a vector of latent spatial process values at the 
\begin_inset Formula $n$
\end_inset

 locations, 
\begin_inset Formula $\bm{C}_y(\bm{\theta})$
\end_inset

 is an error covariance matrix (often diagonal), 
\begin_inset Formula $\mu(\bm{\theta})$
\end_inset

 is the mean vector of the latent process, 
\begin_inset Formula $\bm{C}_g(\bm{\theta})$
\end_inset

 is the spatial covariance matrix of the latent process, and 
\begin_inset Formula $\bm{\theta}$
\end_inset

 is a vector of unknown parameters. We can marginalize over 
\begin_inset Formula $\bm{g}$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:main"

\end_inset

) to obtain the marginal likelihood, 
\begin_inset Formula \[
\bm{Y}|\bm{\theta} \sim\mathcal{N}(\bm{\mu}(\bm{\theta}), \bm{C}(\bm{\theta})),\]
\end_inset

where 
\begin_inset Formula $\bm{C}(\bm{\theta}) = \bm{C}_y(\bm{\theta}) + \bm{C}_g(\bm{\theta})$
\end_inset

. This gives us the marginal density, 
\begin_inset Formula \[f(\bm{y})\propto|\bm{C}(\bm{\theta})|^{-1/2}\exp\left\{
  -\frac{1}{2}(\bm{y}-\bm{\mu}(\bm{\theta}))^{\top}(\bm{C}(\bm{\theta}))^{-1}(\bm{y}-\bm{\mu}(\bm{\theta}))\right\}, \]
\end_inset

which is maximized over 
\begin_inset Formula $\bm{\theta}$
\end_inset

 to find the maximum likelihood estimator. At each iteration in the maximization, the expensive computations are to compute the entries of the matrix 
\begin_inset Formula $\bm{C}(\bm{\theta})$
\end_inset

 as a function of 
\begin_inset Formula $\bm{\theta}$
\end_inset

, calculate the Cholesky decomposition, 
\begin_inset Formula $\bm{LL}^{\top}=\bm{C}(\bm{\theta})$
\end_inset

, and solve a system of equations 
\begin_inset Formula $\bm{L}^{-1}(\bm{y}-\bm{\mu}(\bm{\theta}))$
\end_inset

 via a forwardsolve operation. Given the MLE, 
\begin_inset Formula $\hat{\bm{\theta}}$
\end_inset

, one might then do spatial prediction, calculate the variance of the prediction, and simulate realizations conditional on the data. These additional tasks involve the same expensive computations plus a few additional closely-related computations.
\end_layout

\begin_layout Standard

This set of core functions includes Cholesky decomposition, forwardsolve and backsolve, and crossproduct calculations. These functions, plus some auxiliary functions for communication of inputs and outputs to the processes, provide an API through which an 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 programmer can implement methods for Gaussian-process-based computations. Using the API, we provide a set of methods for the standard operations involved in kriging and Gaussian process regression, namely 
\end_layout

\begin_layout Itemize

likelihood optimization, 
\end_layout

\begin_layout Itemize

prediction, 
\end_layout

\begin_layout Itemize

calculation of prediction uncertainty, 
\end_layout

\begin_layout Itemize

unconditional simulation of Gaussian processes, and 
\end_layout

\begin_layout Itemize

conditional simulation given data. 
\end_layout

\begin_layout Standard

These methods are provided as 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 functions in the package. We illustrate the use of the software for Gaussian process regression in an astrophysics application.
\end_layout

\begin_layout Standard

We close this introduction by situating our software within the context of other software for Gaussian process modeling. A broad variety of software, both within and outside of 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

, is available for working with Gaussian processes, much of it implementing various approximate methods. However, there is little parallelized software for working with Gaussian processes without approximations. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 provides a wide variety of tools for parallelization, best summarized in the High Performance Computing task view on CRAN, as well as a variety of tools for Gaussian process models. The Gaussian process-related packages available on CRAN do not provide parallelized software for exact calculations, with packages such as 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

mlegp
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset CommandInset citation
LatexCommand citep
after ""
before ""
key "Danc:etal:2008"

\end_inset

. Note that while our software is based upon the blocked approach of 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

ScaLAPACK
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 (Section
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:block-chol"

\end_inset

), we tailor the algorithm to achieve better load-balancing and limit communication for Cholesky factorization (Section
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:our-alg"

\end_inset

). Looking outside of 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

, the 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

ScalaGAUSS
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 package 
\begin_inset CommandInset citation
LatexCommand citep
after ""
before ""
key "scalaGauss"

\end_inset

 implements (in 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

C++
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 and 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

MATLAB
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

) likelihood maximization for Gaussian processes using a stochastic approximation to the likelihood that allows for optimization using matrix-vector calculations that are of order 
\begin_inset Formula $n\log n$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand citep
after ""
before ""
key "Anit:etal:2012"

\end_inset

. Recent advances in communication-avoiding linear algebra 
\begin_inset CommandInset citation
LatexCommand citep
after ""
before ""
key "BDHS11"

\end_inset

 in general, and especially for Cholesky decomposition 
\begin_inset CommandInset citation
LatexCommand citep
after ""
before ""
key "GGSYTY12"

\end_inset

 may prove useful in speeding up parallel Gaussian process computation, but have not yet been incorporated into standard libraries like 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

ScaLAPACK
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

.
\end_layout

\begin_layout Section

Parallel algorithm and software implementation
\end_layout

\begin_layout Subsection

Distributed linear algebra calculations
\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "sec:block-chol"

\end_inset

 Parallel computation can be done in both shared memory and distributed memory contexts. Each uses multiple CPUs. In a shared memory context (such as computers with one or more chips with multiple cores), multiple CPUs have access to the same memory and so-called `threaded' calculations can be done, in which code is written (e.g., using the 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

openMP
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 protocol 
\begin_inset CommandInset citation
LatexCommand citep
after ""
before ""
key "openMP"

\end_inset

) to use more than one CPU at once to carry out a task, with each CPU having access to the objects in memory. In a distributed memory context, one has a collection of nodes, each with their own memory. Any information that must be shared with other nodes must be communicated via message-passing, such as using the 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

MPI
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 standard. Our distributed calculations use both threading and message-passing to exploit the capabilities of modern computing clusters with multiple-core nodes.
\end_layout

\begin_layout Standard

We begin by describing a basic parallel Cholesky decomposition, sometimes known as Crout's algorithm, which is done on blocks of the matrix and is implemented in 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

ScaLAPACK
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

. Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:dependency-graph"

\end_inset

 shows a schematic of the block-wise Cholesky factorization, where the covariance matrix is divided into 6 blocks, a 
\begin_inset Formula $B=3$
\end_inset

 by 
\begin_inset Formula $B=3$
\end_inset

 array of blocks (storing only the lower blocks of the symmetric matrix).
\end_layout

\begin_layout Standard


\begin_inset Float figure
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figs/dependency_h.pdf
	scale 50

\end_inset

 
\begin_inset Caption

\begin_layout Standard

 Diagram of the first steps in the distributed Cholesky factorization. Arrows indicate dependencies between processes. Orange coloring indicates computations carried out in each step, and green indicates parts of the matrix that are completely factored as of the previous step. The labels of the form 
\begin_inset Quotes eld
\end_inset

id(x,y)
\begin_inset Quotes erd
\end_inset

 indicate the process ID and Cartesian coordinates of the process.
\begin_inset CommandInset label
LatexCommand label
name "fig:dependency-graph"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

% [insert refs 5,6,8,13 from ICDM paper as needed]
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard

To specify the distributed algorithm, there are several choices to be made: the number of blocks, 
\begin_inset Formula \(B\)
\end_inset

, how to distribute these blocks amongst computational processes, how to distribute these processes amongst the nodes, and how many nodes to use. We discuss the tradeoffs involved in these choices next and the choices that our algorithm makes in Section
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:our-alg"

\end_inset

.
\end_layout

\begin_layout Subsection

Our algorithm
\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "sec:our-alg"

\end_inset


\end_layout

\begin_layout Standard

We require that the number of processes is 
\begin_inset Formula \(P=D(D+1)/2 \in \{1,3,6,10,15,\ldots\}\)
\end_inset

 for some integer value of 
\begin_inset Formula \(D\)
\end_inset

. We introduce another quantity 
\begin_inset Formula \(h\)
\end_inset

 that determines how many blocks each process owns. The number of blocks is given by 
\begin_inset Formula \(B=hD\)
\end_inset

, and so the block size is 
\begin_inset Formula $\left\lceil\frac{n}{hD}\right\rceil,$
\end_inset

 where 
\begin_inset Formula \(n\)
\end_inset

 is the order of the matrix. See Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:matrix-vary-h"

\end_inset

 for an example of the layout with 
\begin_inset Formula \(D=4\)
\end_inset

 and either 
\begin_inset Formula \(h=1\)
\end_inset

 or 
\begin_inset Formula \(h=3\)
\end_inset

. Each 
\begin_inset Quotes eld
\end_inset

diagonal process
\begin_inset Quotes erd
\end_inset

 has 
\begin_inset Formula \(h(h+1)/2\)
\end_inset

 blocks, and each 
\begin_inset Quotes eld
\end_inset

off-diagonal process
\begin_inset Quotes erd
\end_inset

 has 
\begin_inset Formula \(h^2\)
\end_inset

 blocks of the triangular matrix.
\end_layout

\begin_layout Standard


\begin_inset Float figure
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figs/vary-h.pdf
	scale 75

\end_inset

 
\begin_inset Caption

\begin_layout Standard

The matrix layout used by our algorithm with 
\begin_inset Formula \(D=4\)
\end_inset

 and 
\begin_inset Formula \(h=1\)
\end_inset

 (left) or 
\begin_inset Formula \(h=3\)
\end_inset

 (right). The numbers indicate which process owns a given block. When 
\begin_inset Formula \(h=1\)
\end_inset

, each of the 10 processes owns one block of the matrix. When 
\begin_inset Formula \(h=3\)
\end_inset

, the blocks are a third the size in each dimension. The diagonal processes (1, 5, 8, 10) each own 
\begin_inset Formula \(h(h+1)/2=6\)
\end_inset

 blocks, and the off-diagonal processes (2, 3, 4, 6, 7, 9) each own 
\begin_inset Formula \(h^2=9\)
\end_inset

 blocks.
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:matrix-vary-h"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

Note that when 
\begin_inset Formula \(h>1\)
\end_inset

, there are essentially two levels of blocking, indicated by the thin black lines and the thick blue lines in Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:matrix-vary-h"

\end_inset

. Our algorithm is guided by these blocks. At a high level, the algorithm sequentially follows the Cholesky decomposition of the large (blue) blocks as described in the previous section. Each large block is divided among all the processors, and all the processors participate in each step. For example, the first step is to perform Cholesky decomposition on the first large block. To do so, we follow exactly the 
\begin_inset Formula \(h=1\)
\end_inset

 algorithm (making use of the Cartesian coordinate identification system indicated in Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:dependency-graph"

\end_inset

): 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{algorithmic}
\end_layout

\end_inset

[1] 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
For
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset Formula $i=1$
\end_inset

 to 
\begin_inset Formula $D$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
State
\end_layout

\end_inset

 Processor 
\begin_inset Formula $(i,i)$
\end_inset

 computes the Cholesky decomposition of its block 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
ParFor
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset Formula $j=i+1$
\end_inset

 to 
\begin_inset Formula $D$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
State
\end_layout

\end_inset

 Processor 
\begin_inset Formula $(i,i)$
\end_inset

 sends its block to processor 
\begin_inset Formula $(j,i)$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
State
\end_layout

\end_inset

 Processor 
\begin_inset Formula $(j,i)$
\end_inset

 updates its block with a triangular solve 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
ParFor
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset Formula $k=i+1$
\end_inset

 to 
\begin_inset Formula $D$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset Formula $k\leq j$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
State
\end_layout

\end_inset

 Processor 
\begin_inset Formula $(j,i)$
\end_inset

 sends its block to processor 
\begin_inset Formula $(j,k)$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
Else
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
State
\end_layout

\end_inset

 Processor 
\begin_inset Formula $(j,i)$
\end_inset

 sends its block to processor 
\begin_inset Formula $(k,j)$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
EndIf
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
EndParFor
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
EndParFor
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
ParFor
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset Formula $j=i+1$
\end_inset

 to 
\begin_inset Formula $D$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
ParFor
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset Formula $k=j+1$
\end_inset

 to 
\begin_inset Formula $D$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
State
\end_layout

\end_inset

 Processor 
\begin_inset Formula $(k,j)$
\end_inset

 updates its block with a matrix multiplication 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
EndParFor
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
EndParFor
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
EndFor
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{algorithmic}
\end_layout

\end_inset

 The 
\begin_inset Formula \(h=1\)
\end_inset

 algorithm is poorly load-balanced; for example going from 
\begin_inset Formula $D=1$
\end_inset

 to 
\begin_inset Formula $D=2$
\end_inset

 (one process to three processes), one would not expect any speedup because every operation is along the critical path. However, because it is a small portion of the entire calculation for 
\begin_inset Formula $h>1$
\end_inset

, the effect on the total runtime is small. Instead, most of the time is spent in matrix multiplications of the large blue blocks, which are well load-balanced.
\end_layout

\begin_layout Subsubsection

Memory use
\end_layout

\begin_layout Standard

The number of informative entries in a triangular or symmetric 
\begin_inset Formula \(n\times n\)
\end_inset

 matrix is 
\begin_inset Formula \(n(n+1)/2\)
\end_inset

. Ideally, it would be possible to perform computations even if there is only barely this much memory available across all the nodes, that is if there were enough memory for 
\begin_inset Formula \(n(n+1)/(D(D+1))\)
\end_inset

 entries per node. Our algorithm does not reach this ideal, but it has a small memory overhead that decreases as 
\begin_inset Formula \(D\)
\end_inset

 or 
\begin_inset Formula \(h\)
\end_inset

 increase. The maximum memory use is by the off-diagonal nodes that own 
\begin_inset Formula \(h^2\)
\end_inset

 blocks. Additionally, during the course of the algorithm they must temporarily store up to 4 more blocks. Assuming for simplicity that 
\begin_inset Formula $hD$
\end_inset

 evenly divides 
\begin_inset Formula $n$
\end_inset

, the maximum memory use on a node is then 
\begin_inset Formula \begin{eqnarray}
M&\leq \left(\frac{n}{hD}\right)^2(h^2+4)=\frac{n(n+1)}{D(D+1)}\left(1+\frac{4nD+n^2h^2+4n-Dh^2}{Dh^2n+Dh^2}\right) \\&< \frac{n(n+1)}{D(D+1)}\left(1+\frac{4}{h^2}+\frac{1}{D}+\frac{4}{Dh^2}\right).
\end{eqnarray}
\end_inset

For example when 
\begin_inset Formula \(h=3\)
\end_inset

 and 
\begin_inset Formula \(D=4\)
\end_inset

, the memory required is about 1.8 times the memory needed to hold a triangular matrix. Increasing 
\begin_inset Formula \(h\)
\end_inset

 and 
\begin_inset Formula \(D\)
\end_inset

 decreases this overhead factor toward 1.
\end_layout

\begin_layout Standard


\color red
would we like two more brief sections that work out the math for load balance and for communication cost? Also do we prefer precise calculations, as above, or asymptotic ones
\color inherit

\end_layout

\begin_layout Subsection


\begin_inset Argument
status collapsed


\begin_layout Standard

The bigGP R package
\end_layout

\end_inset

The 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

bigGP
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 package
\end_layout

\begin_layout Subsubsection

Overview
\end_layout

\begin_layout Standard

The 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 package 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

bigGP
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 implements a set of core functions, all in a distributed fashion, that are useful for a variety of Gaussian process-based computational tasks. In particular we provide Cholesky factorization, forwardsolve, backsolve and multiplication operations, as well as a variety of auxiliary functions that are used with the core functions to implement high-level statistical tasks. We also provide additional 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 functions for distributing objects to the processes, managing the objects, and collecting results at the master process.
\end_layout

\begin_layout Standard

This set of 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 functions provides an API for 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 developers. A developer can implement new tasks entirely in 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 without needing to know or use 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

C
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 or 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

MPI
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

. Indeed, using the API, we implement standard Gaussian process tasks: log-likelihood calculation, likelihood optimization, prediction, calculation of prediction uncertainty, unconditional simulation of Gaussian processes, and simulation of Gaussian process realizations conditional on data. Distributed construction of mean vectors and covariance matrices is done using user-provided 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 functions that calculate the mean and covariance functions given a vector of parameters and arbitrary inputs.
\end_layout

\begin_layout Subsubsection

API
\end_layout

\begin_layout Standard

The API consists of 
\end_layout

\begin_layout Itemize

basic functions for listing and removing objects on the slave processes and copying objects to and from the slave processes: 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

remoteLs
\end_layout

\end_inset

, 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

remoteRm
\end_layout

\end_inset

, 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

push
\end_layout

\end_inset

, 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

pull
\end_layout

\end_inset

; 
\end_layout

\begin_layout Itemize

functions for determining the lengths and indices of vectors and matrices assigned to a given slave process: 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

getDistributedVectorLength
\end_layout

\end_inset

,
\begin_inset Newline newline
\end_inset


\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

getDistributedTriangularMatrixLength
\end_layout

\end_inset

,
\begin_inset Newline newline
\end_inset


\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

getDistributedRectangularMatrixLength
\end_layout

\end_inset

, 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

remoteGetIndices
\end_layout

\end_inset

; 
\end_layout

\begin_layout Itemize

functions that distribute and collect objects to and from the slave processes, masking the details of how the objects are divided amongst the processes: 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

distributeVector
\end_layout

\end_inset

, 
\begin_inset Newline newline
\end_inset


\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

collectVector
\end_layout

\end_inset

, 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

collectDiagonal
\end_layout

\end_inset

, 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

collectTriangularMatrix
\end_layout

\end_inset

,
\begin_inset Newline newline
\end_inset


\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

collectRectangularMatrix
\end_layout

\end_inset

; and 
\end_layout

\begin_layout Itemize

functions that carry out linear algebra calculations on distributed vectors and matrices: 
\begin_inset Newline newline
\end_inset


\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

remoteCalcChol
\end_layout

\end_inset

, 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

remoteForwardsolve
\end_layout

\end_inset

, 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

remoteBacksolve
\end_layout

\end_inset

, 
\begin_inset Newline newline
\end_inset


\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

remoteMultChol
\end_layout

\end_inset

, 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

remoteCrossProdMatVec
\end_layout

\end_inset

, 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

remoteCrossProdMatSelf
\end_layout

\end_inset

, 
\begin_inset Newline newline
\end_inset


\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

remoteCrossProdMatSelfDiag
\end_layout

\end_inset

, 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

remoteConstructRnormVector
\end_layout

\end_inset

, and 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

remoteConstructRnormMatrix
\end_layout

\end_inset

. In addition there is a generic 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

remoteCalc
\end_layout

\end_inset

 function that can carry out an arbitrary function call with either one or two inputs. 
\end_layout

\begin_layout Standard

The package must be initialized after loading, which is done with the 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

bigGP.init
\end_layout

\end_inset

 function. During initialization, slave processes are spawned and 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 packages loaded on the slaves, parallel random number generation is set up, and blocks are assigned to slaves, with this information stored on each slave process in the 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

.bigGP
\end_layout

\end_inset

 object. Users need to start 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 in such a way (e.g., through a queueing system or via 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

mpirun
\end_layout

\end_inset

) that 
\begin_inset Formula $P$
\end_inset

 slave processes can be initialized, plus one for the master process, for a total of 
\begin_inset Formula $P+1$
\end_inset

. 
\begin_inset Formula $P$
\end_inset

 should be such that 
\begin_inset Formula $P = D(D+1)/2$
\end_inset

 for integer 
\begin_inset Formula $D$
\end_inset

, i.e., 
\begin_inset Formula $P \in {3,6,10,15,\ldots}$
\end_inset

. One may wish to have one process per node, with threaded calculations on each node via a threaded 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

BLAS
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

, or one process per core (in particular when a threaded 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

BLAS
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 is not available). The determination of the number of cores per process is system-specific and not set at the level of 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 or by 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

bigGP
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

. Rather, the user must request a total number of processes and cores per process via whatever queueing system is in place (if any) on the system they are using or by specifying the hosts if simply using 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

mpirun
\end_layout

\end_inset

. We note that apart from requesting resources from the system, the user must specify only a single number, 
\begin_inset Formula $P$
\end_inset

, in 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsubsection

Kriging implementation
\end_layout

\begin_layout Standard

The kriging implementation is built around two reference classes.
\end_layout

\begin_layout Standard

The first is a 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

krigeProblem
\end_layout

\end_inset

 class that contains metadata about the problem and manages the analysis steps. To set up the problem and distribute inputs to the processes, one instantiates an object in the class. The metadata includes the block replication factors and information about which calculations have been performed and which objects are up-to-date (i.e., are consistent with the current parameter values). This allows the package to avoid repeating calculations when parameter values have not changed. Objects in the class are stored on the master process.
\end_layout

\begin_layout Subsubsection

Using the API
\end_layout

\begin_layout Standard

To extend the package to implement other Gaussian process methodologies, the two key elements are construction of the distributed objects and use of the core distributed linear algebra functions. Construction of the distributed objects should mimic the
\begin_inset Newline newline
\end_inset


\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

localKrigeProblemConstructMean
\end_layout

\end_inset

 and 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

localKrigeProblemConstructCov
\end_layout

\end_inset

 functions in the package. 
\end_layout

\begin_layout Section

Timing results
\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "sec:results"

\end_inset


\end_layout

\begin_layout Standard

We focus on computational speed for the Cholesky factorization, as this generally dominates the computational time for Gaussian process computations. We run the code underlying the package as a distributed 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

C
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 program, as 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 serves only as a simple wrapper that calls the local Cholesky functions on the worker processes via the 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

mpi.remote.exec
\end_layout

\end_inset

 function. We use Hopper, a Cray system hosted at the National Energy Research Scientific Computing center (NERSC). Each Hopper node consists of two 12-core AMD 
\begin_inset Quotes eld
\end_inset

MagnyCours
\begin_inset Quotes erd
\end_inset

 processors with 24 GB of memory. Hopper jobs have access to a dedicated Cray Gemini interconnect to obtain low-latency and high bandwidth inter-process communication. While Hopper has 24 cores per node, each node is divided into 4 NUMA regions each with 6 cores; in our experiments we try running one process per node, one process per NUMA region (4 per node), or one process per core (24 per node).
\end_layout

\begin_layout Standard

We start by considering timing as a function of the size of the problem, illustrating that our approach greatly reduces computational time and that it allows one to do computations for matrices too large to work with on an individual machine. We then consider the choice of 
\begin_inset Formula $h$
\end_inset

 and compare our implementation with 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

ScaLAPACK
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

, illustrating that our implementation is equivalent in terms of timing. Next we explore the question of how to assign one's available cores: fewer processes and more cores per process or the reverse. Finally, we consider the use of GPUs.
\end_layout

\begin_layout Subsection

Timing with increasing problem size and comparison with a naive implementation
\end_layout

\begin_layout Standard

As the matrix size 
\begin_inset Formula \(n\)
\end_inset

 increases, the arithmetic count of computations required for Cholesky decomposition increases as a function of 
\begin_inset Formula \(n^3\)
\end_inset

. For small problem sizes, this increase is mitigated by the greater efficiency in computing with larger matrices. Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:vary-n"

\end_inset

 shows how runtime varies with 
\begin_inset Formula \(n\)
\end_inset

.
\end_layout

\begin_layout Standard

As a practical illustration, if 100 Cholesky decompositions were required for likelihood optimization for a problem with 
\begin_inset Formula $n=8192$
\end_inset

, one could carry out the optimization using our implementation with six cores on Hopper in approximately 440 seconds. This is comparable to using a fast threaded 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

BLAS
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 to do a standard Cholesky on a desktop machine. In particular using 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 on a desktop Linux machine with 16 GB RAM and 8 cores linked to 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

openBLAS
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 or on a Mac Mini with 8 GB RAM and 4 cores linked to the 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

vecLib
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

BLAS
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

, the 100 decompositions would take approximately 500 and 610 seconds respectively. In contrast, by using 816 cores on Hopper, computational time is reduced to 40 seconds for 100 decompositions. Furthermore, with 816 cores, such an optimization with 
\begin_inset Formula $n=32768$
\end_inset

 would take approximately 950 seconds with our implementation, but neither of the desktop machines could factorize the matrix because of memory constraints.
\end_layout

\begin_layout Standard


\begin_inset Float figure
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figs/plotb.pdf
	scale 100

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Runtimes as a function of 
\begin_inset Formula \(n\)
\end_inset

 for Cholesky decomposition on Hopper, for a variety of numbers of cores. For 49920 cores, we used 24 cores per process; in the other cases we used 6 cores per process. For each data point, we use the optimal value of 
\begin_inset Formula \(h\)
\end_inset

, as determined in Section
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:choiceH"

\end_inset

. 
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:vary-n"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection


\begin_inset Argument
status collapsed


\begin_layout Standard

Choice of h and comparison to ScaLAPACK
\end_layout

\end_inset

Choice of 
\begin_inset Formula $h$
\end_inset

 and comparison to 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

ScaLAPACK
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "sec:choiceH"

\end_inset

 In Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:vary-h"

\end_inset

 we compare the performance at different values of 
\begin_inset Formula \(h\)
\end_inset

. One notable feature is that for 
\begin_inset Formula \(h=1\)
\end_inset

 there is no performance improvement in increasing from 
\begin_inset Formula \(P=1\)
\end_inset

 to 
\begin_inset Formula \(P=3\)
\end_inset

, because there is no parallelism. Allowing larger values of 
\begin_inset Formula \(h\)
\end_inset

 makes a speedup possible with 
\begin_inset Formula \(P=3\)
\end_inset

. Generally, larger values of 
\begin_inset Formula \(h\)
\end_inset

 perform best when 
\begin_inset Formula \(P\)
\end_inset

 is small, but as 
\begin_inset Formula \(P\)
\end_inset

 grows the value of 
\begin_inset Formula \(h\)
\end_inset

 should decrease to keep the block size from getting too small.
\end_layout

\begin_layout Standard

Figure
\begin_inset space ~

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:vary-h"

\end_inset

 also compares our performance to 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

ScaLAPACK
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

, a standard distributed-memory linear algebra library. Performance for 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

ScaLAPACK
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 (using the optimal block size) and our algorithm (using the optimal value of 
\begin_inset Formula \(h\)
\end_inset

) is similar. We are thus able to get essentially the same performance on distributed linear algebra computations issued from 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 with our framework as if the programmer were working in 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

C
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 and calling 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

ScaLAPACK
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard


\begin_inset Float figure
wide false
sideways false
status open


\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics 
	filename figs/plota.pdf
	scale 100

\end_inset

 
\begin_inset Caption

\begin_layout Standard

Runtimes for 
\begin_inset Formula \(32768\times32768\)
\end_inset

 Cholesky decomposition on Hopper with various values of 
\begin_inset Formula $h$
\end_inset

 using 
\begin_inset Formula $6$
\end_inset

 cores per process. The last line shows 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

ScaLAPACK
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 as a benchmark. The optimal value of 
\begin_inset Formula $h$
\end_inset

 was chosen by trying all values between 1 and 8. The blocksize for 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
pkg{
\end_layout

\end_inset

ScaLAPACK
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 corresponds to the best performance using a power of 2 blocks per process.
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "fig:vary-h"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Section

Astrophysics example
\end_layout

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "sec:example"

\end_inset


\end_layout

\begin_layout Subsection

Statistical model
\end_layout

\begin_layout Standard

We model the flux measurements 
\begin_inset Formula $Y_1, \ldots, Y_{67275}$
\end_inset

 as being equal to a GP realization plus two error components: random effects for each phase (time point) and independent errors due to photon noise. We denote these three components by 
\begin_inset Formula \[Y_i = Z(t_i, w_i) + \alpha_{t_i} + \epsilon_{i},\]
\end_inset

where 
\begin_inset Formula $t_i$
\end_inset

 represents the time corresponding to 
\begin_inset Formula $Y_i$
\end_inset

 and 
\begin_inset Formula $w_i$
\end_inset

 the log wavelength, 
\begin_inset Formula $\alpha_{t_i}$
\end_inset

 is the random effect corresponding to time 
\begin_inset Formula $t_i$
\end_inset

, and 
\begin_inset Formula $\epsilon_i$
\end_inset

 is measurement error for the 
\begin_inset Formula $i^{th}$
\end_inset

 observation. The models for these components are 
\begin_inset Formula \begin{eqnarray*}
Z &\sim& GP(\mu(\cdot; \kappa, \lambda), \sigma^2 K(\cdot, \cdot; \rho_p, \rho_w))\\
\alpha_1, \ldots, \alpha_{25} &\stackrel{iid}{\sim}& N(0, \tau^2)\\
\epsilon_i &\sim& N(0, v_i), \quad \epsilon_1, \ldots, \epsilon_{67275} \mbox{ mutually independent.}
\end{eqnarray*}
\end_inset


\end_layout

\begin_layout Standard


\begin_inset Formula $Z$
\end_inset

 has mean function 
\begin_inset Formula $\mu$
\end_inset

, a function of time 
\begin_inset Formula $t$
\end_inset

 only, derived from a standard template Type Ia supernova spectral time series 
\begin_inset CommandInset citation
LatexCommand citep
after ""
before ""
key "hsiao2007"

\end_inset

, with 
\begin_inset Formula $\kappa$
\end_inset

 and 
\begin_inset Formula $\lambda$
\end_inset

 controlling scaling in magnitude and time. We take the correlation function, 
\begin_inset Formula $K$
\end_inset

, to be a product of two Matérn correlation functions, one for both the phase and log wavelength dimensions, each with smoothness parameter 
\begin_inset Formula $\nu=2$
\end_inset

. Note that the flux error variances 
\begin_inset Formula $v_i$
\end_inset

 are known, leaving us with six parameters to be estimated.
\end_layout

\begin_layout Subsection


\begin_inset Argument
status collapsed


\begin_layout Standard

R code
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 code
\end_layout

\begin_layout Standard

For this problem we chose 
\begin_inset Formula $P=465$
\end_inset

, requesting 
\begin_inset Formula $466$
\end_inset

 processes (including one for the master) with 
\begin_inset Formula $6$
\end_inset

 cores per process on Hopper. In the 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
proglang{
\end_layout

\end_inset

R
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 code, the first steps are to load the package, set up the inputs to the mean and covariance functions, and initialize the kriging problem object, called 
\begin_inset Flex Flex:Code
status collapsed

\begin_layout Standard

prob
\end_layout

\end_inset

. Note that in this case the mean and covariance functions are provided by the package, but in general these would need to be provided by the user. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{verbatim}
\end_layout

\end_inset

 R> library("bigGP")
\end_layout

\begin_layout Standard

R> nProc <- 465 R> n <- nrow(SN2011fe) R> m <- nrow(SN2011fenewdata) R> nu <- 2 R> inputs <- c(as.list(SN2011fe), as.list(SN2011fenewdata), nu = nu)
\end_layout

\begin_layout Standard

R> prob <- krigeProblem
\begin_inset Formula $new("prob", numProcesses = nProc, h_n = NULL, 
   h_m = NULL, n = n, m = m, meanFunction = SN2011fe_meanfunc, 
   predMeanFunction = SN2011fe_predmeanfunc, 
   covFunction = SN2011fe_covfunc, 
   crossCovFunction = SN2011fe_crosscovfunc, 
   predCovFunction = SN2011fe_predcovfunc, inputs = inputs, 
   params = SN2011fe_initialParams, data = SN2011fe$
\end_inset

flux, packages = 'fields', parallelRNGpkg = "rlecuyer") 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{verbatim}
\end_layout

\end_inset

 We then maximize the log likelihood, followed by making the kriging predictions and generating a set of 1000 realizations from the conditional distribution of 
\begin_inset Formula $Z$
\end_inset

 given the observations and fixing the parameters at the maximum likelihood estimates. The predictions and realizations are over a grid, with days ranging from -15 to 24 in increments of 0.5 and wavelengths ranging from 5950 to 6300 in increments of 0.5. The number of prediction points is therefore 
\begin_inset Formula $79 \times 701 = 55379$
\end_inset

. 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{verbatim}
\end_layout

\end_inset

 R> prob
\begin_inset Formula $optimizeLogDens(method = "L-BFGS-B", verbose = TRUE, 
    lower = rep(.Machine$
\end_inset

double.eps, length(SN2011feinitialParams)), control = list(parscale = SN2011feinitialParams))
\end_layout

\begin_layout Standard

R> pred <- prob
\begin_inset Formula $predict(ret = TRUE, se.fit = TRUE, verbose = TRUE)
R> realiz <- prob$
\end_inset

simulateRealizations(r = 1000, post = TRUE, verbose = TRUE)
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

Results
\end_layout

\begin_layout Standard

The MLEs are 
\begin_inset Formula $\hat\sigma^2 = 0.0071$
\end_inset

, 
\begin_inset Formula $\hat\rho_p = 2.33$
\end_inset

, 
\begin_inset Formula $\hat\rho_w = 0.0089$
\end_inset

, 
\begin_inset Formula $\hat\tau^2 = 2.6\times 10^{-5}$
\end_inset

, and 
\begin_inset Formula $\hat\kappa = 0.33$
\end_inset

. These are calculated from the 1000 sampled posterior realizations of 
\begin_inset Formula $Z$
\end_inset

. For each realization, we calculate the minimizing wavelength for each time point.
\end_layout

\begin_layout Standard

Unrelated results are in Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:results"

\end_inset

. 
\begin_inset Float table
placement !t
wide false
sideways false
status open


\begin_layout Standard


\begin_inset Caption

\begin_layout Standard

Some results are here.
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%
\backslash
vspace{.15in}
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center


\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="12">
<features tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c|">
\begin_inset Text

\begin_layout Standard


\series bold
Median absolute error
\series default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard


\series bold
Median relative error
\series default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset Formula $n$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

M1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

M2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

(p) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

M3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

(p) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

M1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

M2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

(p) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

M3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

(p) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard


\series bold

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
underline{Test 1: Holding out all studies from 10
\backslash
% of countries}
\end_layout

\end_inset


\series default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

mean 
\shape smallcaps
haz
\shape default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

181 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.21 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

0.20 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

0.28 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.00 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

0.14 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.56 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

0.19 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

0.00 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

%
\shape smallcaps
haz
\shape default

\begin_inset Formula $<$
\end_inset

-2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

292 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

6.02 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

5.94 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.36 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

8.05 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.00 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.17 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

0.17 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.19 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

0.25 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

0.00 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

%
\shape smallcaps
haz
\shape default

\begin_inset Formula $<$
\end_inset

-3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

202 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

3.62 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

3.40 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.57 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

4.12 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.00 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.27 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

0.26 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.26 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

0.30 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

0.00 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard


\series bold

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
underline{Test 2: Holding out mean and 
\backslash
%$<$-3 when 
\backslash
%$<$-2 is known}
\end_layout

\end_inset


\series default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

mean 
\shape smallcaps
haz
\shape default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

83 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

0.16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.00 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

0.10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.72 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

0.15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.00 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

0.10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

0.89 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

%
\shape smallcaps
haz
\shape default

\begin_inset Formula $<$
\end_inset

-3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

111 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

1.76 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

1.86 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.00 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

1.76 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.19 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

0.19 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

0.01 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

0.16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

0.30 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard


\begin_inset CommandInset label
LatexCommand label
name "tab:results"

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset Newpage clearpage
\end_inset


\begin_inset Newpage newpage
\end_inset


\begin_inset Float table
wide false
sideways false
status open


\begin_layout Standard


\begin_inset Caption

\begin_layout Standard

Results for spatial simulation (1,000 Monte Carlo simulations for each scenario and 100 bootstrap samples). The average out-of-sample 
\begin_inset Formula $R^2$
\end_inset

 is given in parentheses for each exposure model. The first column is the relative bias in estimating 
\begin_inset Formula $\beta=0.1$
\end_inset

. This is the same for 
\begin_inset Formula $\sigma^2=200$
\end_inset

 and 
\begin_inset Formula $\sigma^2=10$
\end_inset

 and is estimated from 100,000 Monte Carlo samples, resulting in negligible Monte Carlo error. The final six columns show the standard deviation, average estimated standard error, and 95
\begin_inset Formula $\%$
\end_inset

 confidence interval coverage, separately for 
\begin_inset Formula $\sigma_\epsilon^2=200$
\end_inset

 and 
\begin_inset Formula $\sigma_\epsilon^2=10$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\size small

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
centering
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size small


\begin_inset Tabular 
<lyxtabular version="3" rows="24" columns="8">
<features tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="right" valignment="top">
<column alignment="right" valignment="top">
<column alignment="right" valignment="top">
<column alignment="right" valignment="top">
<column alignment="right" valignment="top">
<column alignment="right" valignment="top">
<column alignment="right" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
noalign
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset VSpace 0.05cm
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset Formula $\sigma^2_\theta=200$
\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset Formula $\sigma^2_\theta=10$
\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\family roman
Rel Bias
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\family roman
SD
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\family roman
E(SE)
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\family roman
Cov
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\family roman
SD
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\family roman
E(SE)
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\family roman
Cov
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
noalign
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset VSpace 0.05cm
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\family roman
Scenario 
\family default
1
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
noalign
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset VSpace 0.05cm
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\family roman
5 degrees of freedom 
\family default
(0.75)
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
noalign
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset VSpace 0.05cm
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset space \quad{}

\end_inset


\family roman
no correction
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

-0.027
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.084
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.083
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

94%
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.02
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.019
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

93%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset space \quad{}

\end_inset


\family roman
bootstrap standard error only
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

-0.027
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.084
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.084
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

95%
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.02
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.021
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

95%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset space \quad{}

\end_inset


\family roman
bias correction only
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

-0.009
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.086
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.083
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

94%
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.021
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.019
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

93%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset space \quad{}

\end_inset


\family roman
bias correction + bootstrap
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

-0.009
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.086
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.086
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

95%
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.021
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.021
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

96%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
noalign
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset VSpace 0.05cm
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\family roman
10 degrees of freedom 
\family default
(0.79)
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
noalign
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset VSpace 0.05cm
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset space \quad{}

\end_inset


\family roman
no correction
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

-0.039
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.08
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.08
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

95%
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.019
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.018
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

93%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset space \quad{}

\end_inset


\family roman
bootstrap standard error only
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

-0.039
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.08
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.082
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

96%
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.019
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.027
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

98%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset space \quad{}

\end_inset


\family roman
bias correction only
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

-0.025
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.081
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.08
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

94%
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.019
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.018
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

93%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset space \quad{}

\end_inset


\family roman
bias correction + bootstrap
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

-0.025
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.081
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.088
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

97%
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.019
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.03
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

99%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
noalign
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset VSpace 0.05cm
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\family roman
Scenario 
\family default
2
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
noalign
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset VSpace 0.05cm
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\family roman
5 degrees of freedom 
\family default
(0.42)
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
noalign
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset VSpace 0.05cm
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset space \quad{}

\end_inset


\family roman
no correction
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

-0.125
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.099
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.096
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

94%
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.025
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.022
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

87%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset space \quad{}

\end_inset


\family roman
bootstrap standard error only
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

-0.125
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.099
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.097
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

95%
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.025
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.026
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

90%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset space \quad{}

\end_inset


\family roman
bias correction only
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

-0.049
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.108
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.096
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

93%
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.028
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.022
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

86%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset space \quad{}

\end_inset


\family roman
bias correction + bootstrap
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

-0.049
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.108
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.107
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

95%
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.028
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.03
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

94%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
noalign
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset VSpace 0.05cm
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\family roman
10 degrees of freedom 
\family default
(0.59)
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
noalign
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset


\begin_inset VSpace 0.05cm
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

 
\begin_inset space \quad{}

\end_inset


\family roman
no correction
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

-0.102
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.087
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.085
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

93%
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.021
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.019
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

88%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset space \quad{}

\end_inset


\family roman
bootstrap standard error only
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

-0.102
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.087
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.085
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

94%
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.021
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.03
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

94%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset space \quad{}

\end_inset


\family roman
bias correction only
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

-0.061
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.091
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.085
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

92%
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.023
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.019
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

88%
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small


\begin_inset space \quad{}

\end_inset


\family roman
bias correction + bootstrap
\family default

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

-0.061
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.091
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.094
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

95%
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.023
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

0.036
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size small

97%
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\size small


\begin_inset CommandInset label
LatexCommand label
name "tab:linear.sim"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Section

Discussion
\end_layout

\begin_layout Standard

Our software allows one to carry out standard Gaussian process calculations, such as likelihood maximization, prediction, and simulation of realizations, off the shelf, as illustrated in the astrophysics example, in situations in which calculations using threaded linear algebra on a single computer are not feasible because the calculations take too long or use too much memory. The software enables a user to implement standard models and related models without approximations. One limitation of our implementation is that we do not do any pivoting, so Cholesky factorization of matrices that are not numerically positive definite fails. This occurred in the example when simulating realizations on fine grids of wavelength and phase.
\end_layout

\begin_layout Section*

Acknowledgments
\end_layout

\begin_layout Standard

This work is supported by the Director, Office of Science, Office of Advanced Scientific Computing Research, of the U.S. Department of Energy under Contract No. AC02-05CH11231. This research used resources of the National Energy Research Scientific Computing Center.
\end_layout

\begin_layout Standard


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard

 
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "refs"
options "plainnat"

\end_inset


\end_layout

\end_body
\end_document
